- name: Set rsyslog remote loghost
  lineinfile:
    dest: /etc/rsyslog.conf
    regexp: ^\*\.\*
    line: '*.* @@{{ rsyslog_remote_loghost_address }}'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - rsyslog_remote_loghost | bool
  - low_complexity | bool
  tags:
  - rsyslog_remote_loghost
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AU-4(1)
  - NIST-800-53-AU-9(2)

- name: Enable service auditd
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service auditd
    service:
      name: auditd
      enabled: 'yes'
      state: started
    when:
    - '"audit" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - service_auditd_enabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_auditd_enabled
  - high_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(g)
  - NIST-800-53-AU-3
  - NIST-800-53-AU-10
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.2
  - NIST-800-171-3.3.6
  - PCI-DSS-Req-10.1
  - CJIS-5.4.1.1

- name: check audit argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*audit=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: replace existing audit argument
  replace:
    path: /etc/default/grub
    regexp: audit=.
    replace: audit=1
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: add audit argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 audit=1"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="audit=1"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: Configure Kerberos 5 Encryption in Audit Event Multiplexor (audispd)
  lineinfile:
    dest: /etc/audisp/audisp-remote.conf
    line: enable_krb5 = yes
    regexp: ^\s*enable_krb5\s*=\s*.*$
    state: present
    mode: 416
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - auditd_audispd_encrypt_sent_records | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_audispd_encrypt_sent_records
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)

- name: Configure auditd max_log_file_action Upon Reaching Maximum Log Size
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: max_log_file_action = {{ var_auditd_max_log_file_action }}
    regexp: ^\s*max_log_file_action\s*=\s*.*$
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - auditd_data_retention_max_log_file_action | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_max_log_file_action
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-5(b)
  - NIST-800-53-AU-5(2)
  - NIST-800-53-AU-5(1)
  - NIST-800-53-AU-5(4)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.7
  - CJIS-5.4.1.1

- name: Configure auditd Flush Priority
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: ^\s*flush\s*=\s*.*$
    line: flush = {{ var_auditd_flush }}
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - auditd_data_retention_flush | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_flush
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-11
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1

- name: enable syslog plugin
  lineinfile:
    dest: /etc/audisp/plugins.d/syslog.conf
    regexp: ^active
    line: active = yes
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - auditd_audispd_syslog_plugin_activated | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_audispd_syslog_plugin_activated
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-4(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.5.3
  - CJIS-5.4.1.1

- name: Configure auditd space_left on Low Disk Space
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: space_left = {{ var_auditd_space_left }}
    regexp: ^\s*space_left\s*=\s*.*$
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - auditd_data_retention_space_left | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_space_left
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-5(b)
  - NIST-800-53-AU-5(2)
  - NIST-800-53-AU-5(1)
  - NIST-800-53-AU-5(4)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.7

- name: Configure auditd admin_space_left Action on Low Disk Space
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: admin_space_left_action = {{ var_auditd_admin_space_left_action }}
    regexp: ^\s*admin_space_left_action\s*=\s*.*$
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - restrict_strategy | bool
  - auditd_data_retention_admin_space_left_action | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_admin_space_left_action
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-5(b)
  - NIST-800-53-AU-5(2)
  - NIST-800-53-AU-5(1)
  - NIST-800-53-AU-5(4)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.7
  - CJIS-5.4.1.1

- name: Configure auditd space_left Action on Low Disk Space
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: space_left_action = {{ var_auditd_space_left_action }}
    regexp: ^\s*space_left_action\s*=\s*.*$
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - auditd_data_retention_space_left_action | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_space_left_action
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-5(b)
  - NIST-800-53-AU-5(2)
  - NIST-800-53-AU-5(1)
  - NIST-800-53-AU-5(4)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.7
  - CJIS-5.4.1.1

- name: Configure auditd Max Log File Size
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: ^\s*max_log_file\s*=\s*.*$
    line: max_log_file = {{ var_auditd_max_log_file }}
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - auditd_data_retention_max_log_file | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_max_log_file
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-11
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.7
  - CJIS-5.4.1.1

- name: Configure auditd mail_acct Action on Low Disk Space
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: action_mail_acct = {{ var_auditd_action_mail_acct }}
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - auditd_data_retention_action_mail_acct | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_action_mail_acct
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(1)
  - NIST-800-53-AU-5(a)
  - NIST-800-53-AU-5(2)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.7.a
  - CJIS-5.4.1.1

- name: Configure auditd Number of Logs Retained
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: num_logs = {{ var_auditd_num_logs }}
    regexp: ^\s*num_logs\s*=\s*.*$
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - auditd_data_retention_num_logs | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_num_logs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-11
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.7
  - CJIS-5.4.1.1

- name: Set architecture for audit group tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_group
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_group.matched is defined and find_group.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_group.files | map(attribute=''path'') | list | first }}'
  when:
  - find_group.matched is defined and find_group.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit shadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_shadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_shadow.matched is defined and find_shadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_shadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_shadow.matched is defined and find_shadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit gshadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_gshadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_gshadow.matched is defined and find_gshadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gshadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_gshadow.matched is defined and find_gshadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit opasswd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_opasswd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_opasswd.matched is defined and find_opasswd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_opasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_opasswd.matched is defined and find_opasswd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the opasswd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit passwd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_passwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_passwd.matched is defined and find_passwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_passwd.matched is defined and find_passwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit lchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_lchown.matched is defined and find_lchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lchown.matched is defined and find_lchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit setxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_setxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_setxattr.matched is defined and find_setxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_setxattr.matched is defined and find_setxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit chown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chown.matched is defined and find_chown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chown.matched is defined and find_chown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fremovexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fremovexattr.matched is defined and find_fremovexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchown.matched is defined and find_fchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchown.matched is defined and find_fchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit lsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lsetxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lsetxattr.matched is defined and find_lsetxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fsetxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fchownat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchownat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchownat.matched is defined and find_fchownat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchownat.matched is defined and find_fchownat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit chmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chmod
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chmod.matched is defined and find_chmod.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chmod.matched is defined and find_chmod.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fchmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmod
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchmod.matched is defined and find_fchmod.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchmod.matched is defined and find_fchmod.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fchmodat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmodat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchmodat.matched is defined and find_fchmodat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchmodat.matched is defined and find_fchmodat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit lremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lremovexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lremovexattr.matched is defined and find_lremovexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit removexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_removexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_removexattr.matched is defined and find_removexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_removexattr.matched is defined and find_removexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit unlinkat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlinkat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlinkat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit rename tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rename
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_rename.matched is defined and find_rename.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
  when:
  - find_rename.matched is defined and find_rename.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rename rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rename rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rename rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit renameat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_renameat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_renameat.matched is defined and find_renameat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_renameat.matched is defined and find_renameat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the renameat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the renameat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the renameat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit unlink tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlink
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_unlink.matched is defined and find_unlink.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlink.matched is defined and find_unlink.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlink rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlink rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlink rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit rmdir tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rmdir
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_rmdir.matched is defined and find_rmdir.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rmdir.files | map(attribute=''path'') | list | first }}'
  when:
  - find_rmdir.matched is defined and find_rmdir.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rmdir rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rmdir rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rmdir rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rmdir rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit init_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*init_module.*$
    patterns: '*.rules'
  register: find_init_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_init_module.matched is defined and find_init_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_init_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_init_module.matched is defined and find_init_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit finit_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*finit_module.*$
    patterns: '*.rules'
  register: find_finit_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_finit_module.matched is defined and find_finit_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_finit_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_finit_module.matched is defined and find_finit_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the finit_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S finit_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the finit_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S finit_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the finit_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S finit_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the finit_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S finit_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - audit_rules_kernel_module_loading_finit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_finit
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit delete_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*delete_module.*$
    patterns: '*.rules'
  register: find_delete_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_delete_module.matched is defined and find_delete_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_delete_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_delete_module.matched is defined and find_delete_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit lastlog tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_lastlog
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - find_lastlog.matched is defined and find_lastlog.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lastlog.matched is defined and find_lastlog.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the lastlog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/lastlog -p wa -k logins
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/lastlog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Set architecture for audit faillock tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_faillock
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - find_faillock.matched is defined and find_faillock.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
  when:
  - find_faillock.matched is defined and find_faillock.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the faillock rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/run/faillock -p wa -k logins
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/run/faillock -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Set architecture for audit tallylog tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_tallylog
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - find_tallylog.matched is defined and find_tallylog.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_tallylog.files | map(attribute=''path'') | list | first }}'
  when:
  - find_tallylog.matched is defined and find_tallylog.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the tallylog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/tallylog -p wa -k logins
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/tallylog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/setfiles.*$
    patterns: '*.rules'
  register: find_setfiles
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setfiles | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setfiles
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_setfiles.matched is defined and find_setfiles.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setfiles | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setfiles
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_setfiles.files | map(attribute=''path'') | list | first }}'
  when:
  - find_setfiles.matched is defined and find_setfiles.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setfiles | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setfiles
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)

- name: Inserts/replaces the setfiles rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/setfiles -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setfiles | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setfiles
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)

- name: Inserts/replaces the setfiles rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/setfiles -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setfiles | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setfiles
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/setsebool.*$
    patterns: '*.rules'
  register: find_setsebool
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_setsebool.matched is defined and find_setsebool.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_setsebool.files | map(attribute=''path'') | list | first }}'
  when:
  - find_setsebool.matched is defined and find_setsebool.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the setsebool rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the setsebool rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/semanage.*$
    patterns: '*.rules'
  register: find_semanage
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_semanage.matched is defined and find_semanage.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_semanage.files | map(attribute=''path'') | list | first }}'
  when:
  - find_semanage.matched is defined and find_semanage.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the semanage rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the semanage rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chcon.*$
    patterns: '*.rules'
  register: find_chcon
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chcon.matched is defined and find_chcon.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chcon.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chcon.matched is defined and find_chcon.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chcon rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chcon rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/restorecon.*$
    patterns: '*.rules'
  register: find_restorecon
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_restorecon.matched is defined and find_restorecon.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_restorecon.files | map(attribute=''path'') | list | first }}'
  when:
  - find_restorecon.matched is defined and find_restorecon.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the restorecon rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the restorecon rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for Red Hat Virtualization 4 systems that
      target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules


      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.


      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create


      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification


      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit ftruncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_ftruncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ftruncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit truncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_truncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_truncate.matched is defined and find_truncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_truncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_truncate.matched is defined and find_truncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/passwd.*$
    patterns: '*.rules'
  register: find_passwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_passwd.matched is defined and find_passwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_passwd.matched is defined and find_passwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the passwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the passwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/userhelper.*$
    patterns: '*.rules'
  register: find_userhelper
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_userhelper.matched is defined and find_userhelper.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_userhelper.files | map(attribute=''path'') | list | first }}'
  when:
  - find_userhelper.matched is defined and find_userhelper.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the userhelper rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the userhelper rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chsh.*$
    patterns: '*.rules'
  register: find_chsh
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chsh.matched is defined and find_chsh.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chsh.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chsh.matched is defined and find_chsh.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chsh rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chsh rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chage.*$
    patterns: '*.rules'
  register: find_chage
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chage.matched is defined and find_chage.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chage.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chage.matched is defined and find_chage.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chage rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chage rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/su.*$
    patterns: '*.rules'
  register: find_su
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_su.matched is defined and find_su.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_su.files | map(attribute=''path'') | list | first }}'
  when:
  - find_su.matched is defined and find_su.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the su rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the su rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/gpasswd.*$
    patterns: '*.rules'
  register: find_gpasswd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_gpasswd.matched is defined and find_gpasswd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gpasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_gpasswd.matched is defined and find_gpasswd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the gpasswd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the gpasswd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newgrp.*$
    patterns: '*.rules'
  register: find_newgrp
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_newgrp.matched is defined and find_newgrp.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_newgrp.files | map(attribute=''path'') | list | first }}'
  when:
  - find_newgrp.matched is defined and find_newgrp.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the newgrp rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the newgrp rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/libexec/openssh/ssh-keysign.*$
    patterns: '*.rules'
  register: find_ssh_keysign
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_ssh_keysign.matched is defined and find_ssh_keysign.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ssh_keysign.files | map(attribute=''path'') | list | first }}'
  when:
  - find_ssh_keysign.matched is defined and find_ssh_keysign.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the ssh_keysign rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the ssh_keysign rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search for privileged commands
  shell: find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null
  args:
    warn: false
    executable: /bin/bash
  check_mode: false
  register: find_result
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path={{ item }} .*$
    patterns: '*.rules'
  with_items:
  - '{{ find_result.stdout_lines }}'
  register: files_result
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1

- name: Overwrites the rule in rules.d
  lineinfile:
    path: '{{ item.1.path }}'
    line: -a always,exit -F path={{ item.0.item }} -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
    create: false
    regexp: ^.*path={{ item.0.item }} .*$
  with_subelements:
  - '{{ files_result.results }}'
  - files
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1

- name: Adds the rule in rules.d
  lineinfile:
    path: /etc/audit/rules.d/privileged.rules
    line: -a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
    create: true
  with_items:
  - '{{ files_result.results }}'
  when:
  - files_result.results is defined and item.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1

- name: Inserts/replaces the rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
    create: true
    regexp: ^.*path={{ item.item }} .*$
  with_items:
  - '{{ files_result.results }}'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.2
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/postqueue.*$
    patterns: '*.rules'
  register: find_postqueue
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_postqueue.matched is defined and find_postqueue.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_postqueue.files | map(attribute=''path'') | list | first }}'
  when:
  - find_postqueue.matched is defined and find_postqueue.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the postqueue rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the postqueue rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudoedit.*$
    patterns: '*.rules'
  register: find_sudoedit
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_sudoedit.matched is defined and find_sudoedit.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_sudoedit.files | map(attribute=''path'') | list | first }}'
  when:
  - find_sudoedit.matched is defined and find_sudoedit.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the sudoedit rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the sudoedit rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/umount.*$
    patterns: '*.rules'
  register: find_umount
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_umount.matched is defined and find_umount.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_umount.files | map(attribute=''path'') | list | first }}'
  when:
  - find_umount.matched is defined and find_umount.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the umount rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the umount rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/pam_timestamp_check.*$
    patterns: '*.rules'
  register: find_pam_timestamp_check
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_pam_timestamp_check.matched is defined and find_pam_timestamp_check.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_pam_timestamp_check.files | map(attribute=''path'') | list | first }}'
  when:
  - find_pam_timestamp_check.matched is defined and find_pam_timestamp_check.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the pam_timestamp_check rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the pam_timestamp_check rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudo.*$
    patterns: '*.rules'
  register: find_sudo
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_sudo.matched is defined and find_sudo.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_sudo.files | map(attribute=''path'') | list | first }}'
  when:
  - find_sudo.matched is defined and find_sudo.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the sudo rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the sudo rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/postdrop.*$
    patterns: '*.rules'
  register: find_postdrop
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_postdrop.matched is defined and find_postdrop.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_postdrop.files | map(attribute=''path'') | list | first }}'
  when:
  - find_postdrop.matched is defined and find_postdrop.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the postdrop rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the postdrop rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/unix_chkpwd.*$
    patterns: '*.rules'
  register: find_unix_chkpwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unix_chkpwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the unix_chkpwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the unix_chkpwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/crontab.*$
    patterns: '*.rules'
  register: find_crontab
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_crontab.matched is defined and find_crontab.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_crontab.files | map(attribute=''path'') | list | first }}'
  when:
  - find_crontab.matched is defined and find_crontab.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the crontab rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the crontab rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Ensure sysctl kernel.dmesg_restrict is set to 1
  sysctl:
    name: kernel.dmesg_restrict
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_kernel_dmesg_restrict | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_dmesg_restrict
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SI-11(a)
  - NIST-800-53-SI-11(b)
  - NIST-800-171-3.1.5

- name: Ensure sysctl kernel.randomize_va_space is set to 2
  sysctl:
    name: kernel.randomize_va_space
    value: '2'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_kernel_randomize_va_space | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_randomize_va_space
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-30
  - NIST-800-53-SC-30(2)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Ensure sysctl fs.suid_dumpable is set to 0
  sysctl:
    name: fs.suid_dumpable
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_fs_suid_dumpable | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_fs_suid_dumpable
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SI-11(a)
  - NIST-800-53-SI-11(b)

- name: Disable service autofs
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service autofs
    systemd:
      name: autofs.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"autofs.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.4.6

- name: Unit Socket Exists - autofs.socket
  command: systemctl list-unit-files autofs.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.4.6

- name: Disable socket autofs
  systemd:
    name: autofs.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"autofs.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'freevxfs' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/freevxfs.conf
    regexp: freevxfs
    line: install freevxfs /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - kernel_module_freevxfs_disabled | bool
  - reboot_required | bool
  - low_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_freevxfs_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'usb-storage' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/usb-storage.conf
    regexp: usb-storage
    line: install usb-storage /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - reboot_required | bool
  - low_complexity | bool
  tags:
  - kernel_module_usb-storage_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.1.21

- name: Ensure kernel module 'hfs' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/hfs.conf
    regexp: hfs
    line: install hfs /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - medium_disruption | bool
  - kernel_module_hfs_disabled | bool
  - low_complexity | bool
  tags:
  - kernel_module_hfs_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'hfsplus' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/hfsplus.conf
    regexp: hfsplus
    line: install hfsplus /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - kernel_module_hfsplus_disabled | bool
  - low_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_hfsplus_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'jffs2' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/jffs2.conf
    regexp: jffs2
    line: install jffs2 /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - kernel_module_jffs2_disabled | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_jffs2_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'cramfs' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/cramfs.conf
    regexp: cramfs
    line: install cramfs /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - medium_disruption | bool
  - kernel_module_cramfs_disabled | bool
  - low_complexity | bool
  tags:
  - kernel_module_cramfs_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/home'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_home_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_home_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission nosuid are set on /home
  mount:
    path: /home
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_home_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '{{ var_removable_partition }}'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nodev_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nodev_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nodev_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nodev_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission nodev are set on var_removable_partition
  mount:
    path: '{{ var_removable_partition }}'
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nodev_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nodev_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '{{ var_removable_partition }}'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nosuid_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nosuid_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nosuid_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nosuid_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission nosuid are set on var_removable_partition
  mount:
    path: '{{ var_removable_partition }}'
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_nosuid_removable_partitions | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_nosuid_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '{{ var_removable_partition }}'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_noexec_removable_partitions | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_noexec_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_noexec_removable_partitions | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_noexec_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Ensure permission noexec are set on var_removable_partition
  mount:
    path: '{{ var_removable_partition }}'
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_noexec_removable_partitions | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_noexec_removable_partitions
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-MP-7

- name: Test for existence of /etc/securetty
  stat:
    path: /etc/securetty
  register: securetty_empty
  tags:
  - no_direct_root_logins
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.6
  when:
  - no_direct_root_logins | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Direct root Logins Not Allowed
  copy:
    dest: /etc/securetty
    content: ''
  when:
  - securetty_empty.stat.size > 1
  - no_direct_root_logins | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - no_direct_root_logins
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.6

- name: Restrict Serial Port Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ttyS[0-9]
    state: absent
  tags:
  - restrict_serial_port_logins
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-6
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  when:
  - no_reboot_needed | bool
  - restrict_serial_port_logins | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Restrict Virtual Console Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ^vc
    state: absent
  tags:
  - securetty_root_login_console_only
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-6
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - securetty_root_login_console_only | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Prevent Log In to Accounts With Empty Password - system-auth
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - PCI-DSS-Req-8.2.3
  - CJIS-5.5.2
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Prevent Log In to Accounts With Empty Password - password-auth
  replace:
    dest: /etc/pam.d/password-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - PCI-DSS-Req-8.2.3
  - CJIS-5.5.2
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set Account Expiration Following Inactivity
  lineinfile:
    create: true
    dest: /etc/default/useradd
    regexp: ^INACTIVE
    line: INACTIVE={{ var_account_disable_post_pw_expiration }}
  tags:
  - account_disable_post_pw_expiration
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-4(e)
  - NIST-800-53-AC-2(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.5.6
  - PCI-DSS-Req-8.1.4
  - CJIS-5.6.2.1.1
  when:
  - account_disable_post_pw_expiration | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Minimum Age
  lineinfile:
    create: true
    dest: /etc/login.defs
    regexp: ^#?PASS_MIN_DAYS
    line: PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}
  tags:
  - accounts_minimum_age_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(d)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.5.8
  - CJIS-5.6.2.1.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_minimum_age_login_defs | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Minimum Length in login.defs
  lineinfile:
    dest: /etc/login.defs
    regexp: ^PASS_MIN_LEN *[0-9]*
    state: present
    line: PASS_MIN_LEN        {{ var_accounts_password_minlen_login_defs }}
    create: true
  tags:
  - accounts_password_minlen_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.5.7
  - CJIS-5.6.2.1
  when:
  - accounts_password_minlen_login_defs | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Maximum Age
  lineinfile:
    create: true
    dest: /etc/login.defs
    regexp: ^#?PASS_MAX_DAYS
    line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}
  tags:
  - accounts_maximum_age_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(d)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.5.6
  - PCI-DSS-Req-8.2.4
  - CJIS-5.6.2.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_maximum_age_login_defs | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Warning Age
  lineinfile:
    dest: /etc/login.defs
    regexp: ^PASS_WARN_AGE *[0-9]*
    state: present
    line: PASS_WARN_AGE        {{ var_accounts_password_warn_age_login_defs }}
    create: true
  tags:
  - accounts_password_warn_age_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(d)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.5.8
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_warn_age_login_defs | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth unlock_time before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth even_deny_root before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent even_deny_root
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-53-IA-5(c)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add even_deny_root argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent even_deny_root
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-53-IA-5(c)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail even_deny_root after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail even_deny_root
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-53-IA-5(c)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add even_deny_root argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail even_deny_root
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-53-IA-5(c)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny_root
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(b)
  - NIST-800-53-IA-5(c)
  when:
  - no_reboot_needed | bool
  - accounts_passwords_pam_faillock_deny_root | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth deny before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail deny after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    new_type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth fail_interval before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add fail_interval argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock aufthfail fail_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add fail_interval argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Do not allow users to reuse recent passwords - system-auth (change)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$
    replace: \g<1>{{ var_password_pam_unix_remember }}\g<3>
  tags:
  - accounts_password_pam_unix_remember
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(e)
  - NIST-800-171-3.5.8
  - PCI-DSS-Req-8.2.5
  - CJIS-5.6.2.1.1
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_unix_remember | bool
  - low_complexity | bool

- name: Do not allow users to reuse recent passwords - system-auth (add)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$
    replace: \g<0> remember={{ var_password_pam_unix_remember }}
  tags:
  - accounts_password_pam_unix_remember
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(e)
  - NIST-800-171-3.5.8
  - PCI-DSS-Req-8.2.5
  - CJIS-5.6.2.1.1
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_unix_remember | bool
  - low_complexity | bool

- name: Set Password Hashing Algorithm in /etc/login.defs
  lineinfile:
    dest: /etc/login.defs
    regexp: ^#?ENCRYPT_METHOD
    line: ENCRYPT_METHOD SHA512
    state: present
    create: true
  tags:
  - set_password_hashing_algorithm_logindefs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.13.11
  - PCI-DSS-Req-8.2.1
  - CJIS-5.6.2.2
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - set_password_hashing_algorithm_logindefs | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Hashing Algorithm in /etc/libuser.conf
  lineinfile:
    dest: /etc/libuser.conf
    insertafter: ^\s*\[defaults]
    regexp: ^#?crypt_style
    line: crypt_style = sha512
    state: present
    create: true
  tags:
  - set_password_hashing_algorithm_libuserconf
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.13.11
  - PCI-DSS-Req-8.2.1
  - CJIS-5.6.2.2
  when:
  - no_reboot_needed | bool
  - set_password_hashing_algorithm_libuserconf | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable ocredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ocredit
    line: ocredit = {{ var_password_pam_ocredit }}
  tags:
  - accounts_password_pam_ocredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_ocredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable minclass is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minclass
    line: minclass = {{ var_password_pam_minclass }}
  tags:
  - accounts_password_pam_minclass
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  when:
  - no_reboot_needed | bool
  - accounts_password_pam_minclass | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Retry Prompts Permitted Per-Session - system-auth (change)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: (^.*\spam_pwquality.so\s.*retry\s*=\s*)(\S+)(.*$)
    replace: \g<1>{{ var_password_pam_retry }}\g<3>
  tags:
  - accounts_password_pam_retry
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-53-IA-5(4)
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_retry | bool
  - low_complexity | bool

- name: Set Password Retry Prompts Permitted Per-Session - system-auth (add)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^.*\spam_pwquality.so\s(?!.*retry\s*=\s*).*$
    replace: \g<0> retry={{ var_password_pam_retry }}
  tags:
  - accounts_password_pam_retry
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-7(a)
  - NIST-800-53-IA-5(4)
  - CJIS-5.5.3
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_retry | bool
  - low_complexity | bool

- name: Ensure PAM variable difok is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*difok
    line: difok = {{ var_password_pam_difok }}
  tags:
  - accounts_password_pam_difok
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  - CJIS-5.6.2.1.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_difok | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable maxclassrepeat is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*maxclassrepeat
    line: maxclassrepeat = {{ var_password_pam_maxclassrepeat }}
  tags:
  - accounts_password_pam_maxclassrepeat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  when:
  - accounts_password_pam_maxclassrepeat | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable lcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*lcredit
    line: lcredit = {{ var_password_pam_lcredit }}
  tags:
  - accounts_password_pam_lcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  - PCI-DSS-Req-8.2.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_lcredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable maxrepeat is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*maxrepeat
    line: maxrepeat = {{ var_password_pam_maxrepeat }}
  tags:
  - accounts_password_pam_maxrepeat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  when:
  - accounts_password_pam_maxrepeat | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable minlen is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minlen
    line: minlen = {{ var_password_pam_minlen }}
  tags:
  - accounts_password_pam_minlen
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  - PCI-DSS-Req-8.2.3
  - CJIS-5.6.2.1.1
  when:
  - accounts_password_pam_minlen | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable dcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*dcredit
    line: dcredit = {{ var_password_pam_dcredit }}
  tags:
  - accounts_password_pam_dcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  - PCI-DSS-Req-8.2.3
  when:
  - accounts_password_pam_dcredit | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable ucredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ucredit
    line: ucredit = {{ var_password_pam_ucredit }}
  tags:
  - accounts_password_pam_ucredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(4)
  - PCI-DSS-Req-8.2.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_ucredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Disable service debug-shell
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service debug-shell
    systemd:
      name: debug-shell.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"debug-shell.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.4.5

- name: Unit Socket Exists - debug-shell.socket
  command: systemctl list-unit-files debug-shell.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.4.5

- name: Disable socket debug-shell
  systemd:
    name: debug-shell.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"debug-shell.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.4.5

- name: Disable Ctrl-Alt-Del Reboot Activation
  systemd:
    name: ctrl-alt-del.target
    masked: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - disable_ctrlaltdel_reboot | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_ctrlaltdel_reboot
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5

- name: Verify that Interactive Boot is Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: systemd.confirm_spawn=(1|yes|true|on)
    replace: systemd.confirm_spawn=no
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-SC-2(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5

- name: Verify that Interactive Boot is Disabled (runtime)
  command: /sbin/grubby --update-kernel=ALL --remove-args="systemd.confirm_spawn"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-SC-2(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5

- name: Disable Ctrl-Alt-Del Burst Action
  lineinfile:
    dest: /etc/systemd/system.conf
    state: present
    regexp: ^CtrlAltDelBurstAction
    line: CtrlAltDelBurstAction=none
    create: true
  tags:
  - disable_ctrlaltdel_burstaction
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.5
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - disable_ctrlaltdel_burstaction | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: require single user mode password
  lineinfile:
    create: true
    dest: /usr/lib/systemd/system/rescue.service
    regexp: ^#?ExecStart=
    line: ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - require_singleuser_auth | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - require_singleuser_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2
  - NIST-800-53-AC-3
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.4.5

- name: Ensure opensc is installed
  package:
    name: opensc
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - package_opensc_installed | bool
  - low_complexity | bool
  tags:
  - package_opensc_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)

- name: Ensure pcsc-lite is installed
  package:
    name: pcsc-lite
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_pcsc-lite_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)

- name: Enable service pcscd
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service pcscd
    service:
      name: pcscd
      enabled: 'yes'
      state: started
    when:
    - '"pcsc-lite" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_pcscd_enabled | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_pcscd_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2(1)
  - NIST-800-53-IA-2(2)
  - NIST-800-53-IA-2(3)
  - NIST-800-53-IA-2(4)
  - NIST-800-53-IA-2(6)
  - NIST-800-53-IA-2(7)
  - NIST-800-53-IA-2(11)
  - NIST-800-53-CM-6(a)

- name: Check existence of pkcs11-switch
  stat:
    path: /usr/bin/pkcs11-switch
  register: pkcs11switch
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_opensc_nss_db | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - configure_opensc_nss_db
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2(1)
  - NIST-800-53-IA-2(2)
  - NIST-800-53-IA-2(3)
  - NIST-800-53-IA-2(4)
  - NIST-800-53-IA-2(6)
  - NIST-800-53-IA-2(7)
  - NIST-800-53-IA-2(11)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-8.3

- name: Get NSS database smart card configuration
  command: /usr/bin/pkcs11-switch
  changed_when: true
  register: pkcsw_output
  when:
  - pkcs11switch.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_opensc_nss_db | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - configure_opensc_nss_db
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2(1)
  - NIST-800-53-IA-2(2)
  - NIST-800-53-IA-2(3)
  - NIST-800-53-IA-2(4)
  - NIST-800-53-IA-2(6)
  - NIST-800-53-IA-2(7)
  - NIST-800-53-IA-2(11)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-8.3

- name: Configure NSS DB To Use opensc
  command: /usr/bin/pkcs11-switch opensc
  when:
  - pkcs11switch.stat.exists and pkcsw_output.stdout != "opensc"
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_opensc_nss_db | bool
  - medium_severity | bool
  - configure_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - configure_opensc_nss_db
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2(1)
  - NIST-800-53-IA-2(2)
  - NIST-800-53-IA-2(3)
  - NIST-800-53-IA-2(4)
  - NIST-800-53-IA-2(6)
  - NIST-800-53-IA-2(7)
  - NIST-800-53-IA-2(11)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-8.3

- name: Check existence of opensc conf
  stat:
    path: /etc/opensc-{{ ansible_architecture }}.conf
  register: opensc_conf_cd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - configure_opensc_card_drivers | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - configure_opensc_card_drivers
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2(1)
  - NIST-800-53-IA-2(2)
  - NIST-800-53-IA-2(3)
  - NIST-800-53-IA-2(4)
  - NIST-800-53-IA-2(6)
  - NIST-800-53-IA-2(7)
  - NIST-800-53-IA-2(11)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-8.3

- name: Configure opensc Smart Card Drivers
  lineinfile:
    path: /etc/opensc-{{ ansible_architecture }}.conf
    line: '        card_drivers = {{ var_smartcard_drivers }}'
    regexp: (^\s+#|^)\s+card_drivers\s+=\s+.*
    state: present
  when:
  - opensc_conf_cd.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - configure_opensc_card_drivers | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - configure_opensc_card_drivers
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2(1)
  - NIST-800-53-IA-2(2)
  - NIST-800-53-IA-2(3)
  - NIST-800-53-IA-2(4)
  - NIST-800-53-IA-2(6)
  - NIST-800-53-IA-2(7)
  - NIST-800-53-IA-2(11)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-8.3

- name: Check existence of opensc conf
  stat:
    path: /etc/opensc-{{ ansible_architecture }}.conf
  register: opensc_conf_fcd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - force_opensc_card_drivers | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - force_opensc_card_drivers
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2(1)
  - NIST-800-53-IA-2(2)
  - NIST-800-53-IA-2(3)
  - NIST-800-53-IA-2(4)
  - NIST-800-53-IA-2(6)
  - NIST-800-53-IA-2(7)
  - NIST-800-53-IA-2(11)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-8.3

- name: Force opensc To Use Defined Smart Card Driver
  lineinfile:
    path: /etc/opensc-{{ ansible_architecture }}.conf
    line: '        force_card_driver = {{ var_smartcard_drivers }}'
    regexp: (^\s+#|^)\s+force_card_driver\s+=\s+.*
    state: present
  when:
  - opensc_conf_fcd.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - force_opensc_card_drivers | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - force_opensc_card_drivers
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-IA-2(1)
  - NIST-800-53-IA-2(2)
  - NIST-800-53-IA-2(3)
  - NIST-800-53-IA-2(4)
  - NIST-800-53-IA-2(6)
  - NIST-800-53-IA-2(7)
  - NIST-800-53-IA-2(11)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-8.3

- name: Ensure screen is installed
  package:
    name: screen
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - package_screen_installed | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_screen_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.10

- name: Limit the Number of Concurrent Login Sessions Allowed Per User
  lineinfile:
    state: present
    dest: /etc/security/limits.conf
    insertbefore: ^# End of file
    regexp: ^#?\*.*maxlogins
    line: '*           hard    maxlogins     {{ var_accounts_max_concurrent_login_sessions }}'
    create: true
  tags:
  - accounts_max_concurrent_login_sessions
  - low_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-10
  - NIST-800-53-CM-6(a)
  - CJIS-5.5.2.2
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_max_concurrent_login_sessions | bool
  - low_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Interactive Session Timeout
  block:
  - name: Deduplicate values from /etc/profile
    lineinfile:
      path: /etc/profile
      create: false
      regexp: ^\s*TMOUT=
      state: absent
  - name: Check if /etc/profile.d exists
    stat:
      path: /etc/profile.d
    register: _etc_profile_d_exists
  - name: Check if the parameter TMOUT is present in /etc/profile.d
    find:
      paths: /etc/profile.d
      recurse: 'yes'
      follow: 'no'
      contains: ^\s*TMOUT=
    register: _etc_profile_d_has_parameter
    when: _etc_profile_d_exists.stat.isdir is defined and _etc_profile_d_exists.stat.isdir
  - name: Remove parameter from files in /etc/profile.d
    lineinfile:
      path: '{{ item.path }}'
      create: false
      regexp: ^\s*TMOUT=
      state: absent
    with_items: '{{ _etc_profile_d_has_parameter.files }}'
    when: _etc_profile_d_has_parameter.matched
  - name: Insert correct line to /etc/profile
    lineinfile:
      path: /etc/profile
      create: true
      line: TMOUT={{ var_accounts_tmout }}
      state: present
      validate: bash -n %s
  tags:
  - accounts_tmout
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-12
  - NIST-800-53-SC-10
  - NIST-800-53-AC-2(5)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.11
  when:
  - accounts_tmout | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set accounts logon fail delay
  lineinfile:
    dest: /etc/login.defs
    regexp: ^FAIL_DELAY
    line: FAIL_DELAY {{ var_accounts_fail_delay }}
    create: true
  tags:
  - accounts_logon_fail_delay
  - low_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - NIST-800-53-AC-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - accounts_logon_fail_delay | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure the Default UMASK is Set Correctly
  lineinfile:
    create: true
    dest: /etc/login.defs
    regexp: ^UMASK
    line: UMASK {{ var_accounts_user_umask }}
  tags:
  - accounts_umask_etc_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_umask_etc_login_defs | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_grub2_cfg | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Ensure group owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_grub2_cfg | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5

- name: Ensure permission 0600 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    mode: '0600'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Ensure owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Ensure sysctl net.ipv6.conf.all.disable_ipv6 is set to 1
  sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_net_ipv6_conf_all_disable_ipv6 | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_disable_ipv6
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
  sysctl:
    name: net.ipv6.conf.all.accept_ra
    value: '{{ sysctl_net_ipv6_conf_all_accept_ra_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_all_accept_ra | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_ra
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
  sysctl:
    name: net.ipv6.conf.default.accept_ra
    value: '{{ sysctl_net_ipv6_conf_default_accept_ra_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_default_accept_ra | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_ra
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
  sysctl:
    name: net.ipv6.conf.default.accept_source_route
    value: '{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv6_conf_default_accept_source_route | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.all.forwarding is set
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: '{{ sysctl_net_ipv6_conf_all_forwarding_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv6_conf_all_forwarding | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_forwarding
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
  sysctl:
    name: net.ipv6.conf.all.accept_source_route
    value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv6_conf_all_accept_source_route | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv6.conf.default.accept_redirects
    value: '{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv6_conf_default_accept_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv6.conf.all.accept_redirects
    value: '{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_all_accept_redirects | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.default.send_redirects
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_conf_default_send_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_send_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.ip_forward is set to 0
  sysctl:
    name: net.ipv4.ip_forward
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_ip_forward | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_ip_forward
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_conf_all_send_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_send_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.all.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_conf_all_accept_source_route | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
  sysctl:
    name: net.ipv4.icmp_echo_ignore_broadcasts
    value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_icmp_echo_ignore_broadcasts | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.default.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_accept_redirects | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.all.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_all_secure_redirects | bool
  - reboot_required | bool
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_secure_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.all.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_conf_all_accept_redirects | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.all.log_martians is set
  sysctl:
    name: net.ipv4.conf.all.log_martians
    value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_conf_all_log_martians | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_log_martians
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5(3)(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.log_martians is set
  sysctl:
    name: net.ipv4.conf.default.log_martians
    value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - sysctl_net_ipv4_conf_default_log_martians | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_log_martians
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5(3)(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.rp_filter is set
  sysctl:
    name: net.ipv4.conf.all.rp_filter
    value: '{{ sysctl_net_ipv4_conf_all_rp_filter_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_net_ipv4_conf_all_rp_filter | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_rp_filter
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.default.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_conf_default_secure_redirects | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_secure_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.tcp_syncookies is set
  sysctl:
    name: net.ipv4.tcp_syncookies
    value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_tcp_syncookies | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_tcp_syncookies
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5(1)
  - NIST-800-53-SC-5(2)
  - NIST-800-53-SC-5(3)(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.default.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_accept_source_route | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
  sysctl:
    name: net.ipv4.icmp_ignore_bogus_error_responses
    value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_icmp_ignore_bogus_error_responses | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
  sysctl:
    name: net.ipv4.conf.default.rp_filter
    value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_rp_filter | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_rp_filter
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-7(a)
  - NIST-800-171-3.1.20

- name: Disable service bluetooth
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service bluetooth
    systemd:
      name: bluetooth.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"bluetooth.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_bluetooth_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_bluetooth_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-18(a)
  - NIST-800-53-AC-18(3)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.1.16

- name: Unit Socket Exists - bluetooth.socket
  command: systemctl list-unit-files bluetooth.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_bluetooth_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_bluetooth_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-18(a)
  - NIST-800-53-AC-18(3)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.1.16

- name: Disable socket bluetooth
  systemd:
    name: bluetooth.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"bluetooth.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_bluetooth_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_bluetooth_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-18(a)
  - NIST-800-53-AC-18(3)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.1.16

- name: Ensure kernel module 'bluetooth' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/bluetooth.conf
    regexp: bluetooth
    line: install bluetooth /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - kernel_module_bluetooth_disabled | bool
  - reboot_required | bool
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_bluetooth_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-AC-18(a)
  - NIST-800-53-AC-18(3)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.1.16
  - CJIS-5.13.1.3

- name: Ensure kernel module 'dccp' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/dccp.conf
    regexp: dccp
    line: install dccp /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - kernel_module_dccp_disabled | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_dccp_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6
  - CJIS-5.10.1

- name: Ensure kernel module 'sctp' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/sctp.conf
    regexp: sctp
    line: install sctp /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - kernel_module_sctp_disabled | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_sctp_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.6
  - CJIS-5.10.1

- name: Enable service firewalld
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service firewalld
    service:
      name: firewalld
      enabled: 'yes'
      state: started
    when:
    - '"firewalld" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_firewalld_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_firewalld_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CA-3(5)
  - NIST-800-53-SC-7(21)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.3
  - NIST-800-171-3.4.7

- name: Ensure SELinux Not Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: selinux=0
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - grub2_enable_selinux | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_enable_selinux
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2

- name: Configure SELinux Policy
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUXTYPE=
    line: SELINUXTYPE={{ var_selinux_policy_name }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - selinux_policytype | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - selinux_policytype
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-53-AU-9
  - NIST-800-53-SC-7(21)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2

- name: Ensure SELinux State is Enforcing
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUX=
    line: SELINUX={{ var_selinux_state }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - low_disruption | bool
  - selinux_state | bool
  - low_complexity | bool
  tags:
  - selinux_state
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-53-AU-9
  - NIST-800-53-SC-7(21)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_daemons_use_tty | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_daemons_use_tty
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean daemons_use_tty accordingly
  seboolean:
    name: daemons_use_tty
    state: '{{ var_daemons_use_tty }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_daemons_use_tty | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_daemons_use_tty
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_xserver_clients_write_xshm | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xserver_clients_write_xshm
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xserver_clients_write_xshm accordingly
  seboolean:
    name: xserver_clients_write_xshm
    state: '{{ var_xserver_clients_write_xshm }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_xserver_clients_write_xshm | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xserver_clients_write_xshm
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_postgresql_connect_enabled | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_postgresql_connect_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_postgresql_connect_enabled accordingly
  seboolean:
    name: selinuxuser_postgresql_connect_enabled
    state: '{{ var_selinuxuser_postgresql_connect_enabled }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_postgresql_connect_enabled | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_postgresql_connect_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_sysadm_exec_content | bool
  - low_complexity | bool
  tags:
  - sebool_sysadm_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean sysadm_exec_content accordingly
  seboolean:
    name: sysadm_exec_content
    state: '{{ var_sysadm_exec_content }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_sysadm_exec_content | bool
  - low_complexity | bool
  tags:
  - sebool_sysadm_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_mount_anyfile | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_mount_anyfile
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean mount_anyfile accordingly
  seboolean:
    name: mount_anyfile
    state: '{{ var_mount_anyfile }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_mount_anyfile | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_mount_anyfile
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_abrt_upload_watch_anon_write | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_abrt_upload_watch_anon_write
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.7.2

- name: Set SELinux boolean abrt_upload_watch_anon_write accordingly
  seboolean:
    name: abrt_upload_watch_anon_write
    state: '{{ var_abrt_upload_watch_anon_write }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_abrt_upload_watch_anon_write | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_abrt_upload_watch_anon_write
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.7.2

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_xdm_exec_bootloader | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xdm_exec_bootloader
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xdm_exec_bootloader accordingly
  seboolean:
    name: xdm_exec_bootloader
    state: '{{ var_xdm_exec_bootloader }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_xdm_exec_bootloader | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xdm_exec_bootloader
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_domain_fd_use | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_domain_fd_use
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean domain_fd_use accordingly
  seboolean:
    name: domain_fd_use
    state: '{{ var_domain_fd_use }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_domain_fd_use | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_domain_fd_use
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_abrt_anon_write | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_abrt_anon_write
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.7.2

- name: Set SELinux boolean abrt_anon_write accordingly
  seboolean:
    name: abrt_anon_write
    state: '{{ var_abrt_anon_write }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_abrt_anon_write | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_abrt_anon_write
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.7.2

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_share_music | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_share_music
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_share_music accordingly
  seboolean:
    name: selinuxuser_share_music
    state: '{{ var_selinuxuser_share_music }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_share_music | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_share_music
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_xguest_use_bluetooth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xguest_use_bluetooth
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xguest_use_bluetooth accordingly
  seboolean:
    name: xguest_use_bluetooth
    state: '{{ var_xguest_use_bluetooth }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_xguest_use_bluetooth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xguest_use_bluetooth
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_staff_exec_content | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_staff_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean staff_exec_content accordingly
  seboolean:
    name: staff_exec_content
    state: '{{ var_staff_exec_content }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_staff_exec_content | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_staff_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_kerberos_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_kerberos_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean kerberos_enabled accordingly
  seboolean:
    name: kerberos_enabled
    state: '{{ var_kerberos_enabled }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_kerberos_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_kerberos_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_secure_mode | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_secure_mode
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean secure_mode accordingly
  seboolean:
    name: secure_mode
    state: '{{ var_secure_mode }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_secure_mode | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_secure_mode
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_xguest_exec_content | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xguest_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xguest_exec_content accordingly
  seboolean:
    name: xguest_exec_content
    state: '{{ var_xguest_exec_content }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_xguest_exec_content | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xguest_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_logging_syslogd_use_tty | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_logging_syslogd_use_tty
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean logging_syslogd_use_tty accordingly
  seboolean:
    name: logging_syslogd_use_tty
    state: '{{ var_logging_syslogd_use_tty }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_logging_syslogd_use_tty | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_logging_syslogd_use_tty
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_daemons_use_tcp_wrapper | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_daemons_use_tcp_wrapper
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean daemons_use_tcp_wrapper accordingly
  seboolean:
    name: daemons_use_tcp_wrapper
    state: '{{ var_daemons_use_tcp_wrapper }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_daemons_use_tcp_wrapper | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_daemons_use_tcp_wrapper
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_fips_mode | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_fips_mode
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.11

- name: Set SELinux boolean fips_mode accordingly
  seboolean:
    name: fips_mode
    state: '{{ var_fips_mode }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_fips_mode | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_fips_mode
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.11

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_domain_kernel_load_modules | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_domain_kernel_load_modules
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean domain_kernel_load_modules accordingly
  seboolean:
    name: domain_kernel_load_modules
    state: '{{ var_domain_kernel_load_modules }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_domain_kernel_load_modules | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_domain_kernel_load_modules
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_selinuxuser_rw_noexattrfile | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_rw_noexattrfile
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_rw_noexattrfile accordingly
  seboolean:
    name: selinuxuser_rw_noexattrfile
    state: '{{ var_selinuxuser_rw_noexattrfile }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_selinuxuser_rw_noexattrfile | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_rw_noexattrfile
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_mmap_low_allowed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_mmap_low_allowed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean mmap_low_allowed accordingly
  seboolean:
    name: mmap_low_allowed
    state: '{{ var_mmap_low_allowed }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_mmap_low_allowed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_mmap_low_allowed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_deny_execmem | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_deny_execmem
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean deny_execmem accordingly
  seboolean:
    name: deny_execmem
    state: '{{ var_deny_execmem }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_deny_execmem | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_deny_execmem
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_execheap | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execheap
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_execheap accordingly
  seboolean:
    name: selinuxuser_execheap
    state: '{{ var_selinuxuser_execheap }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_execheap | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execheap
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_deny_ptrace | bool
  - low_complexity | bool
  tags:
  - sebool_deny_ptrace
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean deny_ptrace accordingly
  seboolean:
    name: deny_ptrace
    state: '{{ var_deny_ptrace }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_deny_ptrace | bool
  - low_complexity | bool
  tags:
  - sebool_deny_ptrace
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_selinuxuser_use_ssh_chroot | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_use_ssh_chroot
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_use_ssh_chroot accordingly
  seboolean:
    name: selinuxuser_use_ssh_chroot
    state: '{{ var_selinuxuser_use_ssh_chroot }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_selinuxuser_use_ssh_chroot | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_use_ssh_chroot
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_cron_can_relabel | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_cron_can_relabel
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean cron_can_relabel accordingly
  seboolean:
    name: cron_can_relabel
    state: '{{ var_cron_can_relabel }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_cron_can_relabel | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_cron_can_relabel
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_login_console_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_login_console_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean login_console_enabled accordingly
  seboolean:
    name: login_console_enabled
    state: '{{ var_login_console_enabled }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_login_console_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_login_console_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_xguest_mount_media | bool
  - low_complexity | bool
  tags:
  - sebool_xguest_mount_media
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xguest_mount_media accordingly
  seboolean:
    name: xguest_mount_media
    state: '{{ var_xguest_mount_media }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_xguest_mount_media | bool
  - low_complexity | bool
  tags:
  - sebool_xguest_mount_media
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_use_ecryptfs_home_dirs | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_use_ecryptfs_home_dirs
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean use_ecryptfs_home_dirs accordingly
  seboolean:
    name: use_ecryptfs_home_dirs
    state: '{{ var_use_ecryptfs_home_dirs }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_use_ecryptfs_home_dirs | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_use_ecryptfs_home_dirs
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_ping | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_ping
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_ping accordingly
  seboolean:
    name: selinuxuser_ping
    state: '{{ var_selinuxuser_ping }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_ping | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_ping
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_gpg_web_anon_write | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_gpg_web_anon_write
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean gpg_web_anon_write accordingly
  seboolean:
    name: gpg_web_anon_write
    state: '{{ var_gpg_web_anon_write }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_gpg_web_anon_write | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_gpg_web_anon_write
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_daemons_dump_core | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_daemons_dump_core
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean daemons_dump_core accordingly
  seboolean:
    name: daemons_dump_core
    state: '{{ var_daemons_dump_core }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_daemons_dump_core | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_daemons_dump_core
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_cron_system_cronjob_use_shares | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_cron_system_cronjob_use_shares
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean cron_system_cronjob_use_shares accordingly
  seboolean:
    name: cron_system_cronjob_use_shares
    state: '{{ var_cron_system_cronjob_use_shares }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_cron_system_cronjob_use_shares | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_cron_system_cronjob_use_shares
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_user_exec_content | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_user_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean user_exec_content accordingly
  seboolean:
    name: user_exec_content
    state: '{{ var_user_exec_content }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_user_exec_content | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_user_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_execstack | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execstack
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_execstack accordingly
  seboolean:
    name: selinuxuser_execstack
    state: '{{ var_selinuxuser_execstack }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_execstack | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execstack
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_cron_userdomain_transition | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_cron_userdomain_transition
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean cron_userdomain_transition accordingly
  seboolean:
    name: cron_userdomain_transition
    state: '{{ var_cron_userdomain_transition }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_cron_userdomain_transition | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_cron_userdomain_transition
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_guest_exec_content | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_guest_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean guest_exec_content accordingly
  seboolean:
    name: guest_exec_content
    state: '{{ var_guest_exec_content }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_guest_exec_content | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_guest_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_logging_syslogd_can_sendmail | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_logging_syslogd_can_sendmail
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean logging_syslogd_can_sendmail accordingly
  seboolean:
    name: logging_syslogd_can_sendmail
    state: '{{ var_logging_syslogd_can_sendmail }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_logging_syslogd_can_sendmail | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_logging_syslogd_can_sendmail
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_mysql_connect_enabled | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_mysql_connect_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_mysql_connect_enabled accordingly
  seboolean:
    name: selinuxuser_mysql_connect_enabled
    state: '{{ var_selinuxuser_mysql_connect_enabled }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_mysql_connect_enabled | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_mysql_connect_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_selinuxuser_udp_server | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_udp_server
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_udp_server accordingly
  seboolean:
    name: selinuxuser_udp_server
    state: '{{ var_selinuxuser_udp_server }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_selinuxuser_udp_server | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_udp_server
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_polyinstantiation_enabled | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_polyinstantiation_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean polyinstantiation_enabled accordingly
  seboolean:
    name: polyinstantiation_enabled
    state: '{{ var_polyinstantiation_enabled }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_polyinstantiation_enabled | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_polyinstantiation_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_xdm_write_home | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xdm_write_home
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xdm_write_home accordingly
  seboolean:
    name: xdm_write_home
    state: '{{ var_xdm_write_home }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_xdm_write_home | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xdm_write_home
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_auditadm_exec_content | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_auditadm_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-80424-5

- name: Set SELinux boolean auditadm_exec_content accordingly
  seboolean:
    name: auditadm_exec_content
    state: '{{ var_auditadm_exec_content }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_auditadm_exec_content | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_auditadm_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-80424-5

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_secadm_exec_content | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_secadm_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean secadm_exec_content accordingly
  seboolean:
    name: secadm_exec_content
    state: '{{ var_secadm_exec_content }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - sebool_secadm_exec_content | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_secadm_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_secure_mode_insmod | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_secure_mode_insmod
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean secure_mode_insmod accordingly
  seboolean:
    name: secure_mode_insmod
    state: '{{ var_secure_mode_insmod }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_secure_mode_insmod | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_secure_mode_insmod
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_ssh_keysign | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_ssh_keysign
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean ssh_keysign accordingly
  seboolean:
    name: ssh_keysign
    state: '{{ var_ssh_keysign }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_ssh_keysign | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_ssh_keysign
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_selinuxuser_tcp_server | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_tcp_server
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_tcp_server accordingly
  seboolean:
    name: selinuxuser_tcp_server
    state: '{{ var_selinuxuser_tcp_server }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_selinuxuser_tcp_server | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_tcp_server
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_mock_enable_homedirs | bool
  - low_complexity | bool
  tags:
  - sebool_mock_enable_homedirs
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean mock_enable_homedirs accordingly
  seboolean:
    name: mock_enable_homedirs
    state: '{{ var_mock_enable_homedirs }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - sebool_mock_enable_homedirs | bool
  - low_complexity | bool
  tags:
  - sebool_mock_enable_homedirs
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_direct_dri_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_direct_dri_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_direct_dri_enabled accordingly
  seboolean:
    name: selinuxuser_direct_dri_enabled
    state: '{{ var_selinuxuser_direct_dri_enabled }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_direct_dri_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_direct_dri_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_xserver_execmem | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xserver_execmem
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xserver_execmem accordingly
  seboolean:
    name: xserver_execmem
    state: '{{ var_xserver_execmem }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_xserver_execmem | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xserver_execmem
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_xserver_object_manager | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xserver_object_manager
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xserver_object_manager accordingly
  seboolean:
    name: xserver_object_manager
    state: '{{ var_xserver_object_manager }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_xserver_object_manager | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xserver_object_manager
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_unconfined_login | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_unconfined_login
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean unconfined_login accordingly
  seboolean:
    name: unconfined_login
    state: '{{ var_unconfined_login }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_unconfined_login | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_unconfined_login
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_ssh_sysadm_login | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_ssh_sysadm_login
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean ssh_sysadm_login accordingly
  seboolean:
    name: ssh_sysadm_login
    state: '{{ var_ssh_sysadm_login }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_ssh_sysadm_login | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_ssh_sysadm_login
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_abrt_handle_event | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_abrt_handle_event
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.7.2

- name: Set SELinux boolean abrt_handle_event accordingly
  seboolean:
    name: abrt_handle_event
    state: '{{ var_abrt_handle_event }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_abrt_handle_event | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_abrt_handle_event
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.7.2

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_ssh_chroot_rw_homedirs | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_ssh_chroot_rw_homedirs
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean ssh_chroot_rw_homedirs accordingly
  seboolean:
    name: ssh_chroot_rw_homedirs
    state: '{{ var_ssh_chroot_rw_homedirs }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_ssh_chroot_rw_homedirs | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_ssh_chroot_rw_homedirs
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_secure_mode_policyload | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_secure_mode_policyload
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean secure_mode_policyload accordingly
  seboolean:
    name: secure_mode_policyload
    state: '{{ var_secure_mode_policyload }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_secure_mode_policyload | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_secure_mode_policyload
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_xdm_bind_vnc_tcp_port | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xdm_bind_vnc_tcp_port
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xdm_bind_vnc_tcp_port accordingly
  seboolean:
    name: xdm_bind_vnc_tcp_port
    state: '{{ var_xdm_bind_vnc_tcp_port }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_xdm_bind_vnc_tcp_port | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xdm_bind_vnc_tcp_port
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_xdm_sysadm_login | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xdm_sysadm_login
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xdm_sysadm_login accordingly
  seboolean:
    name: xdm_sysadm_login
    state: '{{ var_xdm_sysadm_login }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sebool_xdm_sysadm_login | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xdm_sysadm_login
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_execmod | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execmod
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean selinuxuser_execmod accordingly
  seboolean:
    name: selinuxuser_execmod
    state: '{{ var_selinuxuser_execmod }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_execmod | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execmod
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_xguest_connect_network | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xguest_connect_network
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean xguest_connect_network accordingly
  seboolean:
    name: xguest_connect_network
    state: '{{ var_xguest_connect_network }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_xguest_connect_network | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_xguest_connect_network
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_logadm_exec_content | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_logadm_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Set SELinux boolean logadm_exec_content accordingly
  seboolean:
    name: logadm_exec_content
    state: '{{ var_logadm_exec_content }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_logadm_exec_content | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_logadm_exec_content
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Does prelink file exist
  stat:
    path: /etc/sysconfig/prelink
  register: prelink_exists
  tags:
  - disable_prelink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.13.11
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_prelink | bool
  - low_disruption | bool
  - low_complexity | bool

- name: disable prelinking
  lineinfile:
    path: /etc/sysconfig/prelink
    regexp: ^PRELINKING=
    line: PRELINKING=no
  when:
  - prelink_exists.stat.exists
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_prelink | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_prelink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.13.11
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Ensure dracut-fips is installed
  package:
    name: dracut-fips
    state: present
  when:
  - ansible_distribution == 'RedHat'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_dracut-fips_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8
  - CJIS-5.10.1.2

- name: check prelink binary installed
  stat:
    path: /usr/sbin/prelink
  register: prelink_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: disable prelink
  lineinfile:
    dest: /etc/sysconfig/prelink
    regexp: ^#?PRELINKING
    line: PRELINKING=no
  when:
  - prelink_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: revert prelinking binaries
  command: /usr/sbin/prelink -ua
  when:
  - prelink_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: Check if system supports AES-NI
  command: grep -q -m1 -o aes /proc/cpuinfo
  failed_when: aesni_supported.rc > 1
  register: aesni_supported
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: Ensure dracut-fips-aesni is installed
  package:
    name: dracut-fips-aesni
    state: present
  when:
  - aesni_supported.rc == 0
  - ansible_distribution == 'RedHat'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: install dracut-fips
  package:
    name: dracut-fips
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: Rebuild initramfs
  command: dracut -f
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: check fips argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*fips=' /etc/default/grub
  failed_when: false
  register: fipsargcheck
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: replace existing fips argument
  replace:
    path: /etc/default/grub
    regexp: fips=.
    replace: fips=1
  when:
  - fipsargcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: add fips argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 fips=1"
  when:
  - fipsargcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: get boot device uuid
  command: findmnt --noheadings --output uuid --target /boot
  register: bootuuid
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: check boot argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*boot=' /etc/default/grub
  failed_when: false
  register: bootargcheck
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: replace existing boot argument
  replace:
    path: /etc/default/grub
    regexp: boot=\w*-\w*-\w*-\w*-\w*
    replace: boot={{ bootuuid.stdout }}
  when:
  - bootargcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: add boot argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 boot=UUID={{ bootuuid.stdout }}"
  when:
  - bootargcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="fips=1 boot=UUID={{ bootuuid.stdout }}"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2

- name: Read list of files with incorrect ownership
  command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev --nocaps --nolinkto --nomode
  args:
    warn: false
  register: files_with_incorrect_ownership
  failed_when: files_with_incorrect_ownership.rc > 1
  changed_when: false
  check_mode: false
  tags:
  - rpm_verify_ownership
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1
  when:
  - rpm_verify_ownership | bool
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - medium_disruption | bool

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: false
  with_items: '{{ files_with_incorrect_ownership.stdout_lines | map(''regex_findall'', ''^[.]+[U|G]+.* (\/.*)'', ''\1'') |
    map(''join'') | select(''match'', ''(\/.*)'') | list | unique }}'
  register: list_of_packages
  changed_when: false
  check_mode: false
  when:
  - (files_with_incorrect_ownership.stdout_lines | length > 0)
  - rpm_verify_ownership | bool
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_ownership
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Correct file ownership with RPM
  command: rpm --quiet --setugids '{{ item }}'
  args:
    warn: false
  with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list | unique }}'
  when:
  - (files_with_incorrect_ownership.stdout_lines | length > 0)
  - rpm_verify_ownership | bool
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_ownership
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: 'Set fact: Package manager reinstall command (dnf)'
  set_fact:
    package_manager_reinstall_cmd: dnf reinstall -y
  when:
  - ansible_distribution == "Fedora"
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: 'Set fact: Package manager reinstall command (yum)'
  set_fact:
    package_manager_reinstall_cmd: yum reinstall -y
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux")
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Read files with incorrect hash
  command: rpm -Va --nodeps --nosize --nomtime --nordev --nocaps --nolinkto --nouser --nogroup --nomode --noconfig --noghost
  args:
    warn: false
  register: files_with_incorrect_hash
  changed_when: false
  failed_when: files_with_incorrect_hash.rc > 1
  check_mode: false
  when:
  - (package_manager_reinstall_cmd is defined)
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: false
  with_items: '{{ files_with_incorrect_hash.stdout_lines | map(''regex_findall'', ''^[.]+[5]+.* (\/.*)'', ''\1'') | map(''join'')
    | select(''match'', ''(\/.*)'') | list | unique }}'
  register: list_of_packages
  changed_when: false
  check_mode: false
  when:
  - files_with_incorrect_hash.stdout_lines is defined
  - (files_with_incorrect_hash.stdout_lines | length > 0)
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Reinstall packages of files with incorrect hash
  command: '{{ package_manager_reinstall_cmd }} ''{{ item }}'''
  args:
    warn: false
  with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list | unique }}'
  when:
  - files_with_incorrect_hash.stdout_lines is defined
  - (package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines | length > 0))
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Read list of files with incorrect permissions
  command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev --nocaps --nolinkto --nouser --nogroup
  args:
    warn: false
  register: files_with_incorrect_permissions
  failed_when: files_with_incorrect_permissions.rc > 1
  changed_when: false
  check_mode: false
  tags:
  - rpm_verify_permissions
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1
  when:
  - high_complexity | bool
  - no_reboot_needed | bool
  - rpm_verify_permissions | bool
  - restrict_strategy | bool
  - high_severity | bool
  - medium_disruption | bool

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: false
  with_items: '{{ files_with_incorrect_permissions.stdout_lines | map(''regex_findall'', ''^[.]+[M]+.* (\/.*)'', ''\1'') |
    map(''join'') | select(''match'', ''(\/.*)'') | list | unique }}'
  register: list_of_packages
  changed_when: false
  check_mode: false
  when:
  - (files_with_incorrect_permissions.stdout_lines | length > 0)
  - high_complexity | bool
  - no_reboot_needed | bool
  - rpm_verify_permissions | bool
  - restrict_strategy | bool
  - high_severity | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_permissions
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Correct file permissions with RPM
  command: rpm --setperms '{{ item }}'
  args:
    warn: false
  with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list | unique }}'
  when:
  - (files_with_incorrect_permissions.stdout_lines | length > 0)
  - high_complexity | bool
  - no_reboot_needed | bool
  - rpm_verify_permissions | bool
  - restrict_strategy | bool
  - high_severity | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_permissions
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Ensure aide is installed
  package:
    name: aide
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - package_aide_installed | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_aide_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Ensure AIDE is installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
  - aide
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - aide_build_database | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - aide_build_database
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Build and Test AIDE Database
  command: /usr/sbin/aide --init
  changed_when: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - aide_build_database | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - aide_build_database
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Check whether the stock AIDE Database exists
  stat:
    path: /var/lib/aide/aide.db.new.gz
  register: aide_database_stat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - aide_build_database | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - aide_build_database
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Stage AIDE Database
  copy:
    src: /var/lib/aide/aide.db.new.gz
    dest: /var/lib/aide/aide.db.gz
    backup: true
    remote_src: true
  when:
  - (aide_database_stat.stat.exists is defined and aide_database_stat.stat.exists)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - aide_build_database | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - aide_build_database
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Ensure AIDE is installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
  - aide
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - aide_periodic_cron_checking | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - aide_periodic_cron_checking
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Configure Periodic Execution of AIDE
  cron:
    name: run AIDE check
    minute: 5
    hour: 4
    weekday: 0
    user: root
    job: /usr/sbin/aide --check
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - aide_periodic_cron_checking | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - aide_periodic_cron_checking
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-11.5
  - CJIS-5.10.1.3

- name: Ensure gdm is removed
  package:
    name: gdm
    state: absent
  tags:
  - package_gdm_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - package_gdm_removed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure YUM Removes Previous Package Versions
  lineinfile:
    dest: /etc/yum.conf
    regexp: ^#?clean_requirements_on_remove
    line: clean_requirements_on_remove=1
    insertafter: \[main\]
    create: true
  tags:
  - clean_components_post_updating
  - low_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-SI-2(6)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - low_severity | bool
  - clean_components_post_updating | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-171-3.4.8

- name: Ensure GPG check Enabled for Local Packages (Yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Scientific" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-171-3.4.8

- name: Ensure GPG check Enabled for Local Packages (DNF)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-171-3.4.8

- name: Read permission of GPG key directory
  stat:
    path: /etc/pki/rpm-gpg/
  register: gpg_key_directory_permission
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Read signatures in GPG key
  command: gpg --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
  args:
    warn: false
  changed_when: false
  register: gpg_fingerprints
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Installed GPG Fingerprints
  set_fact:
    gpg_installed_fingerprints: '{{ gpg_fingerprints.stdout | regex_findall(''^pub.*

      (?:^fpr[:]*)([0-9A-Fa-f]*)'', ''\1'') | list }}'
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Valid fingerprints
  set_fact:
    gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "43A6E49C4A38F4BE9ABF2A5345689C882FA658E0")
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Import RedHat GPG key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when:
  - gpg_key_directory_permission.stat.mode <= '0755'
  - (gpg_installed_fingerprints | difference(gpg_valid_fingerprints)) | length == 0
  - gpg_installed_fingerprints | length > 0
  - ansible_distribution == "RedHat"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: gpgcheck
    value: 1
    no_extra_spaces: true
    create: false
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Scientific" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (dnf)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: gpgcheck
    value: 1
    no_extra_spaces: true
    create: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Security patches are up to date
  package:
    name: '*'
    state: latest
  tags:
  - security_patches_up_to_date
  - high_severity
  - skip_ansible_lint
  - patch_strategy
  - low_complexity
  - high_disruption
  - reboot_required
  - NIST-800-53-SI-2(5)
  - NIST-800-53-SI-2(c)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - security_patches_up_to_date | bool
  - reboot_required | bool
  - high_severity | bool
  - skip_ansible_lint | bool
  - high_disruption | bool
  - patch_strategy | bool
  - low_complexity | bool

- name: Grep for yum repo section names
  shell: grep -HEr '^\[.+\]' -r /etc/yum.repos.d/
  register: repo_grep_results
  ignore_errors: true
  changed_when: false
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - enable_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set gpgcheck=1 for each yum repo
  ini_file:
    path: '{{ item[0] }}'
    section: '{{ item[1] }}'
    option: gpgcheck
    value: '1'
    no_extra_spaces: true
  loop: '{{ repo_grep_results.stdout | regex_findall( ''(.+\.repo):\[(.+)\]\n?'' ) }}'
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - enable_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Ensure vsftpd is removed
  package:
    name: vsftpd
    state: absent
  tags:
  - package_vsftpd_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - package_vsftpd_removed | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure openssh-server is installed
  package:
    name: openssh-server
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_openssh-server_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)

- name: Enable service sshd
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service sshd
    service:
      name: sshd
      enabled: 'yes'
      state: started
    when:
    - '"openssh-server" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - service_sshd_enabled | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_sshd_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-8
  - NIST-800-53-SC-8(1)
  - NIST-800-53-SC-8(2)
  - NIST-800-53-SC-8(3)
  - NIST-800-53-SC-8(4)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.5.4
  - NIST-800-171-3.13.8

- name: Find /etc/ssh/ file(s)
  find:
    paths: /etc/ssh/
    patterns: ^.*_key$
    use_regex: true
  register: files_found
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_permissions_sshd_private_key | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_sshd_private_key
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.10

- name: Set permissions for /etc/ssh/ file(s)
  file:
    path: '{{ item.path }}'
    mode: '0640'
  with_items:
  - '{{ files_found.files }}'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_permissions_sshd_private_key | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_sshd_private_key
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.10

- name: Find /etc/ssh/ file(s)
  find:
    paths: /etc/ssh/
    patterns: ^.*.pub$
    use_regex: true
  register: files_found
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_permissions_sshd_pub_key | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_sshd_pub_key
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.10

- name: Set permissions for /etc/ssh/ file(s)
  file:
    path: '{{ item.path }}'
    mode: '0644'
  with_items:
  - '{{ files_found.files }}'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - file_permissions_sshd_pub_key | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_sshd_pub_key
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.10

- name: Enable Encrypted X11 Forwarding
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*X11Forwarding\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: X11Forwarding yes
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - sshd_enable_x11_forwarding | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_x11_forwarding
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-171-3.1.13

- name: Disable Kerberos Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*KerberosAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: KerberosAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_kerb_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_kerb_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12

- name: Disable GSSAPI Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*GSSAPIAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: GSSAPIAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_gssapi_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_gssapi_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-171-3.1.12

- name: Disable SSH Root Login
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitRootLogin\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitRootLogin no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_root_login | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_root_login
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-6(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-IA-2
  - NIST-800-53-IA-2(5)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6

- name: Use Only FIPS 140-2 Validated MACs
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*MACs\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: MACs {{ sshd_approved_macs }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_use_approved_macs | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_use_approved_macs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-SC-13
  - NIST-800-53-MA-4(6)
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8

- name: Do Not Allow SSH Environment Options
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitUserEnvironment\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitUserEnvironment no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_do_not_permit_user_env | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_do_not_permit_user_env
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12
  - CJIS-5.5.6

- name: Set SSH Idle Timeout Interval
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveInterval\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: ClientAliveInterval {{ sshd_idle_timeout_value }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_set_idle_timeout | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_idle_timeout
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-2(5)
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-SC-10
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.11
  - PCI-DSS-Req-8.1.8
  - CJIS-5.5.6

- name: Ensure firewalld is installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
  - firewalld
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - firewalld_sshd_port_enabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - firewalld_sshd_port_enabled
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(b)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-171-3.1.12

- name: Enable SSHD in firewalld (custom port)
  firewalld:
    port: '{{ sshd_listening_port }}/tcp'
    permanent: true
    state: enabled
  when:
  - sshd_listening_port != 22
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - firewalld_sshd_port_enabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - firewalld_sshd_port_enabled
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(b)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-171-3.1.12

- name: Enable SSHD in firewalld (default port)
  firewalld:
    service: ssh
    permanent: true
    state: enabled
  when:
  - sshd_listening_port == 22
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - firewalld_sshd_port_enabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - firewalld_sshd_port_enabled
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(b)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-171-3.1.12

- name: Enable Use of Strict Mode Checking
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*StrictModes\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: StrictModes yes
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sshd_enable_strictmodes | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_strictmodes
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-6
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12

- name: Set SSH Client Alive Max Count
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveCountMax\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_set_keepalive | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_keepalive
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-2(5)
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-SC-10
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.11
  - CJIS-5.5.6

- name: Disable SSH Support for Rhosts RSA Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*RhostsRSAAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: RhostsRSAAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_disable_rhosts_rsa | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_rhosts_rsa
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12

- name: Enable Use of Privilege Separation
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*UsePrivilegeSeparation\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: UsePrivilegeSeparation sandbox
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sshd_use_priv_separation | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_use_priv_separation
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-6
  - NIST-800-171-3.1.12

- name: Use Only FIPS 140-2 Validated Ciphers
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Ciphers\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_use_approved_ciphers | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_use_approved_ciphers
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-SC-13
  - NIST-800-53-MA-4(6)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8
  - CJIS-5.5.6

- name: Allow Only SSH Protocol 2
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Protocol\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Protocol 2
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - sshd_allow_only_protocol2 | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_allow_only_protocol2
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-SC-13
  - NIST-800-53-MA-4(6)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.5.4
  - CJIS-5.5.6

- name: Enable SSH Print Last Log
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PrintLastLog\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PrintLastLog yes
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_print_last_log | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_print_last_log
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-9
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)

- name: Disable SSH Access via Empty Passwords
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitEmptyPasswords\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitEmptyPasswords no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_empty_passwords | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_empty_passwords
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6

- name: Enable SSH Warning Banner
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Banner\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Banner /etc/issue
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_enable_warning_banner | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_warning_banner
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(c)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.9
  - CJIS-5.5.6

- name: Disable Compression Or Set Compression to delayed
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Compression\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Compression delayed
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_disable_compression | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_compression
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12

- name: Disable Host-Based Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*HostbasedAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: HostbasedAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_host_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_host_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-AC-3
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12
  - CJIS-5.5.6

- name: Get nfs and nfs4 mount points, that don't have nosuid
  command: findmnt --fstab --types nfs,nfs4 -O nonosuid -n
  register: points_register
  check_mode: false
  changed_when: false
  failed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_nosuid_remote_filesystems | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_nosuid_remote_filesystems
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM6(a)

- name: Add nosuid to nfs and nfs4 mount points
  mount:
    path: '{{ item.split()[0] }}'
    src: '{{ item.split()[1] }}'
    fstype: '{{ item.split()[2] }}'
    state: mounted
    opts: '{{ item.split()[3] }},nosuid'
  when:
  - (points_register.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_nosuid_remote_filesystems | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  with_items: '{{ points_register.stdout_lines }}'
  tags:
  - mount_option_nosuid_remote_filesystems
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM6(a)

- name: Get nfs and nfs4 mount points, that don't have noexec
  command: findmnt --fstab --types nfs,nfs4 -O nonoexec -n
  register: points_register
  check_mode: false
  changed_when: false
  failed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_noexec_remote_filesystems | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_noexec_remote_filesystems
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(8)
  - NIST-800-53-AC-6(10)
  - NIST-800-53-CM-6(a)

- name: Add noexec to nfs and nfs4 mount points
  mount:
    path: '{{ item.split()[0] }}'
    src: '{{ item.split()[1] }}'
    fstype: '{{ item.split()[2] }}'
    state: mounted
    opts: '{{ item.split()[3] }},noexec'
  when:
  - (points_register.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_noexec_remote_filesystems | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  with_items: '{{ points_register.stdout_lines }}'
  tags:
  - mount_option_noexec_remote_filesystems
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-AC-6
  - NIST-800-53-AC-6(8)
  - NIST-800-53-AC-6(10)
  - NIST-800-53-CM-6(a)

- name: Get nfs and nfs4 mount points, that don't have nodev
  command: findmnt --fstab --types nfs,nfs4 -O nonodev -n
  register: points_register
  check_mode: false
  changed_when: false
  failed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_nodev_remote_filesystems | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_nodev_remote_filesystems
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-2

- name: Add nodev to nfs and nfs4 mount points
  mount:
    path: '{{ item.split()[0] }}'
    src: '{{ item.split()[1] }}'
    fstype: '{{ item.split()[2] }}'
    state: mounted
    opts: '{{ item.split()[3] }},nodev'
  when:
  - (points_register.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_nodev_remote_filesystems | bool
  - medium_disruption | bool
  - low_complexity | bool
  with_items: '{{ points_register.stdout_lines }}'
  tags:
  - mount_option_nodev_remote_filesystems
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-2

- name: Disable service zebra
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service zebra
    systemd:
      name: zebra.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"zebra.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - service_zebra_disabled | bool
  - low_complexity | bool
  tags:
  - service_zebra_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - zebra.socket
  command: systemctl list-unit-files zebra.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - service_zebra_disabled | bool
  - low_complexity | bool
  tags:
  - service_zebra_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket zebra
  systemd:
    name: zebra.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"zebra.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - service_zebra_disabled | bool
  - low_complexity | bool
  tags:
  - service_zebra_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Test for domain group
  command: grep '\s*\[domain\/[^]]*]' /etc/sssd/sssd.conf
  register: test_grep_domain
  ignore_errors: true
  changed_when: false
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sssd_memcache_timeout | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_memcache_timeout
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(13)

- name: Add default domain group (if no domain there)
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    create: true
    mode: 384
  with_items:
  - section: sssd
    option: domains
    value: default
  - section: domain/default
    option: id_provider
    value: files
  when:
  - test_grep_domain.stdout is defined
  - test_grep_domain.stdout | length < 1
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sssd_memcache_timeout | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_memcache_timeout
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(13)

- name: Configure SSSD's Memory Cache to Expire
  ini_file:
    dest: /etc/sssd/sssd.conf
    section: nss
    option: memcache_timeout
    value: '{{ var_sssd_memcache_timeout }}'
    create: true
    mode: 384
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sssd_memcache_timeout | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_memcache_timeout
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(13)

- name: Test for domain group
  command: grep '\s*\[domain\/[^]]*]' /etc/sssd/sssd.conf
  register: test_grep_domain
  ignore_errors: true
  changed_when: false
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sssd_enable_smartcards | bool
  - low_complexity | bool
  tags:
  - sssd_enable_smartcards
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed

- name: Add default domain group (if no domain there)
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    create: true
    mode: 384
  with_items:
  - section: sssd
    option: domains
    value: default
  - section: domain/default
    option: id_provider
    value: files
  when:
  - test_grep_domain.stdout is defined
  - test_grep_domain.stdout | length < 1
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sssd_enable_smartcards | bool
  - low_complexity | bool
  tags:
  - sssd_enable_smartcards
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed

- name: Enable Smartcards in SSSD
  ini_file:
    dest: /etc/sssd/sssd.conf
    section: pam
    option: pam_cert_auth
    value: true
    create: true
    mode: 384
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sssd_enable_smartcards | bool
  - low_complexity | bool
  tags:
  - sssd_enable_smartcards
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed

- name: Test for domain group
  command: grep '\s*\[domain\/[^]]*]' /etc/sssd/sssd.conf
  register: test_grep_domain
  ignore_errors: true
  changed_when: false
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - sssd_ssh_known_hosts_timeout | bool
  - low_complexity | bool
  tags:
  - sssd_ssh_known_hosts_timeout
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(13)

- name: Add default domain group (if no domain there)
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    create: true
    mode: 384
  with_items:
  - section: sssd
    option: domains
    value: default
  - section: domain/default
    option: id_provider
    value: files
  when:
  - test_grep_domain.stdout is defined
  - test_grep_domain.stdout | length < 1
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - sssd_ssh_known_hosts_timeout | bool
  - low_complexity | bool
  tags:
  - sssd_ssh_known_hosts_timeout
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(13)

- name: Configure SSSD to Expire SSH Known Hosts
  ini_file:
    dest: /etc/sssd/sssd.conf
    section: ssh
    option: ssh_known_hosts_timeout
    value: '{{ var_sssd_ssh_known_hosts_timeout }}'
    create: true
    mode: 384
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - sssd_ssh_known_hosts_timeout | bool
  - low_complexity | bool
  tags:
  - sssd_ssh_known_hosts_timeout
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(13)

- name: Test for domain group
  command: grep '\s*\[domain\/[^]]*]' /etc/sssd/sssd.conf
  register: test_grep_domain
  ignore_errors: true
  changed_when: false
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sssd_offline_cred_expiration | bool
  - medium_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_offline_cred_expiration
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(13)

- name: Add default domain group (if no domain there)
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    create: true
    mode: 384
  with_items:
  - section: sssd
    option: domains
    value: default
  - section: domain/default
    option: id_provider
    value: files
  when:
  - test_grep_domain.stdout is defined
  - test_grep_domain.stdout | length < 1
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sssd_offline_cred_expiration | bool
  - medium_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_offline_cred_expiration
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(13)

- name: Configure SSD to Expire Offline Credentials
  ini_file:
    dest: /etc/sssd/sssd.conf
    section: pam
    option: offline_credentials_expiration
    value: 1
    create: true
    mode: 384
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sssd_offline_cred_expiration | bool
  - medium_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sssd_offline_cred_expiration
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(13)

- name: Ensure xorg-x11-server-common is removed
  package:
    name: xorg-x11-server-common
    state: absent
  tags:
  - package_xorg-x11-server-common_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Disable service kdump
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service kdump
    systemd:
      name: kdump.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"kdump.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - kdump.socket
  command: systemctl list-unit-files kdump.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket kdump
  systemd:
    name: kdump.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"kdump.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Enable service crond
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service crond
    service:
      name: crond
      enabled: 'yes'
      state: started
    when:
    - '"cronie" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_crond_enabled | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_crond_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)

- name: Test for existence /etc/cron.allow
  stat:
    path: /etc/cron.allow
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_owner_cron_allow | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_allow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure owner 0 on /etc/cron.allow
  file:
    path: /etc/cron.allow
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_owner_cron_allow | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_cron_allow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Test for existence /etc/cron.allow
  stat:
    path: /etc/cron.allow
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - file_groupowner_cron_allow | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_allow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure group owner 0 on /etc/cron.allow
  file:
    path: /etc/cron.allow
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - configure_strategy | bool
  - file_groupowner_cron_allow | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_cron_allow
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)

- name: Ensure xinetd is removed
  package:
    name: xinetd
    state: absent
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_severity | bool
  - package_xinetd_removed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_xinetd_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable service xinetd
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service xinetd
    systemd:
      name: xinetd.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"xinetd.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_xinetd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_xinetd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - xinetd.socket
  command: systemctl list-unit-files xinetd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_xinetd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_xinetd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.7

- name: Disable socket xinetd
  systemd:
    name: xinetd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"xinetd.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_xinetd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_xinetd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.7

- name: Ensure rsh is removed
  package:
    name: rsh
    state: absent
  tags:
  - package_rsh_removed
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.1.13
  when:
  - package_rsh_removed | bool
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure rsh-server is removed
  package:
    name: rsh-server
    state: absent
  tags:
  - package_rsh-server_removed
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_complexity | bool
  - low_disruption | bool
  - high_severity | bool

- name: Disable service rlogin
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rlogin
    systemd:
      name: rlogin.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rlogin.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_rlogin_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rlogin_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - rlogin.socket
  command: systemctl list-unit-files rlogin.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_rlogin_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rlogin_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket rlogin
  systemd:
    name: rlogin.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rlogin.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_rlogin_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rlogin_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable service rsh
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rsh
    systemd:
      name: rsh.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rsh.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - service_rsh_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rsh_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - rsh.socket
  command: systemctl list-unit-files rsh.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - service_rsh_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rsh_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket rsh
  systemd:
    name: rsh.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rsh.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - service_rsh_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rsh_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable service rexec
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rexec
    systemd:
      name: rexec.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rexec.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rexec_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - rexec.socket
  command: systemctl list-unit-files rexec.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rexec_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket rexec
  systemd:
    name: rexec.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rexec.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rexec_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- block:
  - name: Detect shosts.equiv Files on the System
    find:
      paths: /
      recurse: true
      patterns: shosts.equiv
    check_mode: false
    register: shosts_equiv_locations
  - name: Remove Rsh Trust Files
    file:
      path: '{{ item.path }}'
      state: absent
    with_items: '{{ shosts_equiv_locations.files }}'
    when: shosts_equiv_locations
  tags:
  - no_rsh_trust_files
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - low_disruption | bool
  - no_rsh_trust_files | bool
  - low_complexity | bool

- name: Ensure tftp-server is removed
  package:
    name: tftp-server
    state: absent
  tags:
  - package_tftp-server_removed
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_complexity | bool
  - low_disruption | bool
  - high_severity | bool

- name: Ensure talk-server is removed
  package:
    name: talk-server
    state: absent
  tags:
  - package_talk-server_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure talk is removed
  package:
    name: talk
    state: absent
  tags:
  - package_talk_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - package_talk_removed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure ypserv is removed
  package:
    name: ypserv
    state: absent
  tags:
  - package_ypserv_removed
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  when:
  - package_ypserv_removed | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure ypbind is removed
  package:
    name: ypbind
    state: absent
  tags:
  - package_ypbind_removed
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  when:
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - package_ypbind_removed | bool
  - low_complexity | bool

- name: Disable service ypbind
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service ypbind
    systemd:
      name: ypbind.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"ypbind.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_ypbind_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_ypbind_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)

- name: Unit Socket Exists - ypbind.socket
  command: systemctl list-unit-files ypbind.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_ypbind_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_ypbind_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)

- name: Disable socket ypbind
  systemd:
    name: ypbind.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"ypbind.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_ypbind_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_ypbind_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)

- name: Ensure telnet is removed
  package:
    name: telnet
    state: absent
  tags:
  - package_telnet_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-171-3.1.13
  when:
  - package_telnet_removed | bool
  - no_reboot_needed | bool
  - disable_strategy | bool
  - low_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure telnet-server is removed
  package:
    name: telnet-server
    state: absent
  tags:
  - package_telnet-server_removed
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_complexity | bool
  - low_disruption | bool
  - high_severity | bool

- name: Disable service telnet
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service telnet
    systemd:
      name: telnet.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"telnet.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_telnet_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_telnet_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - telnet.socket
  command: systemctl list-unit-files telnet.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_telnet_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_telnet_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket telnet
  systemd:
    name: telnet.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"telnet.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_telnet_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_telnet_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
